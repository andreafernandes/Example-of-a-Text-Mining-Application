{"name":"Appetite-textmining-code","tagline":"Using GATE to text mine 'appetite'","body":"# appetite-textmining-code\r\n\r\n\r\n**Using [GATE](https://gate.ac.uk/family/) to text mine a data variable, which happens to be 'appetite'**\r\n\r\nThis repo is a record of my [JAPE](https://gate.ac.uk/sale/tao/splitch8.html#chap:jape) code to text mine the variable \"appetite\" within a bespoke psychiatric health record database, [CRIS](http://www.slam.nhs.uk/about/core-facilities/cris). \r\n\r\nIt is mainly for my own benefit but do feel free to contact me for suggestions, questions or constructive feedback!\r\n\r\n\r\n##About Author\r\n\r\n\r\n###Details and Contact Information\r\n| Author Name | Andrea Fernandes| \r\n|:--------|:--------------|\r\n|Occupation| PhD student, 2nd Year|\r\n|Email | andrea.fernandes@kcl.ac.uk|\r\n|University|King's College London|\r\n|Funding| MHRUK - Mental Health Research UK|\r\n\r\n**********\r\n\r\n\r\nPurpose of 'Appetite Variable' -   \r\nThis code will highlight the term 'appetite' AND any terms which collectively describe either 'good' or 'poor' appetite.\r\n\r\n\r\n| Data source         | [CRIS](http://www.slam.nhs.uk/about/\t\t\t\t\t\t\tcore-facilities/cris) - Pseudonymised \t\t\t\t\t\t\telectronic psychiatric healthcare \t\t\t\t\t\t\trecords| \r\n|:--------------------|:------------|\r\n|Data extracted       | Clinical notes with the term \t\t\t\t\t\t\t'appetite' menioned were extracted \t\t\t\t\t\t\t and processed to be read by GATE. \t\t\t\t\t\t\t Contact author for details on this. |\r\n|Text-mining software | [GATE](www.gate.ac.uk)|\r\n\r\n\r\n*************\r\n##Training Data\r\n\r\nThe following JAPE code and [gazateers](https://gate.ac.uk/sale/tao/splitch13.html) were generated after using 500 documents, each of which had the term 'appetite' mentioned and each of which was coded by two separate annotators to describe \"good\" or \"bad appetite\". \r\n\r\nRules to code appetite were generated beforehand: ![GOLD STANDARD RULES](https://cloud.githubusercontent.com/assets/10629155/12238166/95b70598-b87a-11e5-9fe6-dcefe1bd904b.png). \r\n\r\n\r\n\r\n#### GAZATEERS\r\n\r\nA Gazateer is - basically -  a list of terms stored in a .lst file. \r\n\r\nI used 5 gazateers to help me pick up \"good\" or \"bad appetite\" (The list of terms were derived from the Training Set)\r\n\r\n\r\n\r\nGazateer 1: appetite_gazateer.lst file \r\n\r\nThis gazateer that picks up \"appetite\" in all potential forms\r\n\r\n```\r\nAppetite\r\nappetite\r\nappettite\r\nAppettite\r\nappetitte\r\nAppetitte\r\napetite\r\nApetite\r\napetitte\r\nApetitte\r\napettite\r\nApettite\r\nappettitte\r\nAppettitte\r\nappetite:\r\nAppetite:\r\nappetite-\r\nAppetite-\r\nappetite\r\n\r\n```\r\nGazateer 2: appetite poor describe.lst \r\n\r\nThis is a list of terms that describe poor appetite. \r\n\r\n```\r\nAbsent \r\nabsent\r\nDecreasing\r\ndecreasing\r\nDecreased\r\ndecreased\r\nDecrease in\r\ndecrease in\r\ndeficit\r\nDeficit\r\ndown\r\nDown\r\ngone\r\ngone down\r\nGone\r\nGone down\r\nloss of\r\nLoss of\r\nlosing\r\nLosing\r\nloosing\r\nlack of\r\nLack of\r\nLoss\r\nloss\r\nLost\r\nlost\r\nLow \r\nlow\r\nlittle\r\nLittle\r\nLacks\r\nlacks\r\nLack\r\nlack\r\nLacking \r\nlacking\r\nNo \r\nno\r\nNo interest\r\nno interest\r\nnot great\r\nnot as good\r\nnot very well\r\nPoor\r\npoor\r\nreduction\r\nReduction\r\nReduced\r\nreduced\r\nSmaller\r\nsmaller\r\nSuppressed\r\nsuppressed\r\nSuppress\r\nsuppress\r\nSuppression\r\nsuppression\r\nWorse\r\nworse\r\nWorsening\r\nworsening\r\n```\r\n\r\nGazateer 3: appetite good describe.lst\r\n\r\n```\r\nalright\r\nAlright\r\ndenies problems with\r\ndenies issues with\r\neats well\r\nEats well\r\nEating well\r\neating well\r\nexcellent\r\nExcellent\r\nfine\r\nFine\r\nfair\r\nFair\r\nGood\r\ngood\r\ngreat\r\nGreat\r\nhas appetite\r\nHas appetite\r\nhealthy\r\nHealthy\r\nintact\r\nIntact\r\nNot too bad\r\nnot too bad\r\nno problem\r\nno problems\r\nNo problems\r\nNo problem\r\nno concerns\r\nNo concerns\r\nno concern\r\nNo concern\r\nNo difficulties\r\nno difficulties\r\nNo difficulty\r\nno difficulty\r\nNo issue\r\nNo issues\r\nno issue\r\nno issues\r\nnormal\r\nNormal\r\nok\r\nokay\r\nOK\r\nOk\r\nreasonable\r\nReasonable \r\nRegular\r\nregular\r\nstable\r\nStable\r\nsatisfactory\r\nSatisfactory\r\nsteady\r\nSteady\r\nUnremarkable\r\nunremarkable\r\nUnimpaired\r\nunimpaired\r\n```\r\n\r\nGazateer 4: negation.lst\r\n\r\nThis .lst file was generated to be able to interpret negation terms used with \"good appetite\" or \"bad appetite\". \r\n\r\nFor example, \"he _DID NOT_ have bad appetite\". I need to write JAPE to code this sentence as \"NOT bad appeite\"\r\n\r\n```\r\nnever\r\nNever\r\nDenied\r\ndenied\r\ndid not\r\nno\r\nNo\r\ndenies\r\nDenies\r\ndoes not report\r\nDoes not report\r\nnot been\r\nnot\r\nNot\r\nNot been\r\nnever had\r\nNever had\r\nNot having \r\nnot having\r\nwas not\r\n```\r\n\r\nGazateer 5: symptom_gazateer.lst \r\n\r\nThese were symptoms I wanted to _IGNORE_ but which kept being mentioned with \"appetite\". I generate this file to then write JAPE code to ignore the below symptoms. \r\n\r\n```\r\nsleep\r\nSleep\r\nMemory\r\nmemory\r\nConcentration\r\nconcentration\r\nWeight\r\nweight\r\nDepression\r\ndepression\r\ndepressed\r\nDepressed\r\nEnergy\r\nenergy\r\nMood\r\nmood\r\n```\r\n\r\nThese .lst files are then saved into a single  .def file, which looks like so:\r\n\r\n\r\n```\r\nappetite_gazateer.lst:appetite_mention\r\nappetite_poor_describe.lst:appetite_description:poor\r\nappetite_good_describe.lst:appetite_description:good\r\nnegation.lst:negationterms:negation\r\nsymptom_gazateer.lst:Symptom:symptoms\r\n```\r\nI saved this file as appetite.def\r\n\r\nNotice that each of my .lst files are listed in this appetite.def file. \r\n\r\nEach listing is FOLLOWED BY a format similar to this:\r\n\r\nxxxx.lst file: yyyyyy: zzzzzz \r\n\r\nThe \"yyyyyy\" and \"zzzzzz\" are known as MAJOR TYPE and MINOR TYPE. \r\n\r\nIn the JAPE code, i go one to use these MAJOR TYPE and MINOR TYPE terms to give my coding more flexibility. You'll see this below. \r\n\r\n\r\n\r\n\r\n\r\n#### JAPE CODE\r\n\r\nOK so now that I have my list of terms that I am confident described \"good\" and \"bad appetite\" in CRIS, I will start on JAPE code. \r\n\r\nJape code writing - Several days pass\r\n\r\n\r\n\r\n\r\n######FINAL JAPE code\r\n\r\n\r\n```\r\nPhase: Appetite\r\nInput: Lookup Token Split\r\nOptions: control = appelt\r\n\r\n\r\n\r\nRule: AppetiteThenDescriber\r\nPriority: 10\r\n\r\n(\r\n\r\n\t({Token.string =~ \"[Aa]ppetite\", !Lookup.MajorType == \"Symptom\"}):SymptomAppetiteOnly\r\n\r\n\t({Lookup.minorType == \"good\"} | \r\n \t {Lookup.minorType == \"poor\"}):descriptorsOfAppetite\r\n\r\n):AppetiteDescription\r\n-->\r\n:AppetiteDescription.Appetite = {rule = \"AppetiteDescription1\", AppetiteType = :descriptorsOfAppetite.Lookup.minorType, ApplyNegation = \"no\"}\r\n\r\n\r\n\r\n\r\nRule: AppetiteThenDescriber\r\nPriority: 9\r\n(\r\n\r\n\t({Token.string =~ \"[Aa]ppetite\", !Lookup.MajorType == \"Symptom\"}):SymptomAppetiteOnly\r\n\r\n\t {Token.category == \":\", Token.category != \",\"} \r\n\t({Lookup.minorType == \"good\"} | \r\n  \t {Lookup.minorType == \"poor\"}):descriptorsOfAppetite\r\n\r\n):AppetiteDescription\r\n-->\r\n:AppetiteDescription.Appetite = {rule = \"AppetiteDescription2\", AppetiteType = :descriptorsOfAppetite.Lookup.minorType, ApplyNegation = \"no\"}\r\n\r\n\r\n\r\n\r\nRule: DescriberThenAppetite\r\nPriority: 9\r\n(\r\n\r\n\t({Lookup.minorType == \"good\"} | \r\n\t {Lookup.minorType == \"poor\"}):descriptorsOfAppetite\r\n\t {Token.category != \",\"}\r\n\t({Token.string =~ \"[Aa]ppetite\", !Lookup.MajorType == \"Symptom\"}):SymptomAppetiteOnly\r\n\r\n):AppetiteDescription\r\n-->\r\n:AppetiteDescription.Appetite = {rule = \"AppetiteDescription3\", AppetiteType = :descriptorsOfAppetite.Lookup.minorType, ApplyNegation = \"no\"}\r\n\r\n\r\n\r\n\r\nRule: DescriberThenAppetite\r\nPriority: 8\r\n(\r\n\r\n\t({Lookup.minorType == \"good\"} | \r\n\t {Lookup.minorType == \"poor\"}):descriptorsOfAppetite\r\n\t {Token.category != \",\"}\r\n\t({Token,!Split})[0,3]\r\n\t({Token.string =~ \"[Aa]ppetite\", !Lookup.MajorType == \"Symptom\"}):SymptomAppetiteOnly\r\n\r\n):AppetiteDescription\r\n-->\r\n:AppetiteDescription.Appetite = {rule = \"AppetiteDescription4\", AppetiteType = :descriptorsOfAppetite.Lookup.minorType, ApplyNegation = \"no\"}\r\n\r\n\r\n\r\n\r\nRule: AppetiteThenDescriber\r\nPriority: 7\r\n(\r\n\r\n\t({Token.string =~ \"[Aa]ppetite\", !Lookup.MajorType == \"Symptom\"}):SymptomAppetiteOnly\r\n\t({Token,!Split})[0,3]\r\n\t {Token.category != \",\"}\r\n\t({Lookup.minorType == \"good\"} | \r\n\t {Lookup.minorType == \"poor\"}):descriptorsOfAppetite\r\n\r\n):AppetiteDescription\r\n-->\r\n:AppetiteDescription.Appetite = {rule = \"AppetiteDescription5\", AppetiteType = :descriptorsOfAppetite.Lookup.minorType, ApplyNegation = \"no\"}\r\n\r\n\r\n\r\n\r\nRule: AppetiteThenDescriber\r\nPriority: 7\r\n(\r\n\r\n\t({Lookup.minorType == negation}):Negationwords\r\n\t({Token,!Split})[0,3]\r\n\t({Lookup.minorType == \"good\"}  | \r\n\t {Lookup.minorType == \"poor\"}):descriptorsOfAppetite\r\n\t({Token,!Split})[0,3]\r\n\t({Token.string =~ \"[Aa]ppetite\", !Lookup.MajorType == \"Symptom\"}):SymptomAppetiteOnly\r\n\r\n):AppetiteDescriptionwithNegation\r\n-->\r\n:AppetiteDescriptionwithNegation.Appetite = {rule = \"AppetiteDescriptionwithNegation6\", AppetiteType = :descriptorsOfAppetite.Lookup.minorType, ApplyNegation = \"yes\"}\r\n\r\n\r\n\r\n\r\nRule: AppetiteThenDescriber\r\nPriority: 6\r\n(\r\n\r\n\t({Token.string =~ \"[Aa]ppetite\", !Lookup.MajorType == \"Symptom\"}):SymptomAppetiteOnly\t\r\n\t({Token,!Split})[0,3]\r\n\t({Lookup.minorType == negation}):Negationwords\r\n\t({Token,!Split})[0,3]\r\n\t({Lookup.minorType == \"good\"}  | \r\n\t {Lookup.minorType == \"poor\"}):descriptorsOfAppetite\r\n\r\n):AppetiteDescriptionwithNegation\r\n-->\r\n:AppetiteDescriptionwithNegation.Appetite = {rule = \"AppetiteDescriptionwithNegation7\", AppetiteType = :descriptorsOfAppetite.Lookup.minorType, ApplyNegation = \"yes\"}\r\n\r\n\r\n\r\n\r\nRule: AppetiteThenDescriber\r\nPriority: 6\r\n(\r\n\r\n\t({Token.string =~ \"[Nn]o\"})\r\n\t({!Token.string == \"change\"})\r\n\t({Token,!Split})[0,3]\r\n\t({Token.string =~ \"[Aa]ppetite\", !Lookup.MajorType == \"Symptom\"}):SymptomAppetiteOnly\r\n\t({Token.string =~ \"[Pp]roblems\"})\r\n\r\n):AppetiteDescriptionwithNegation\r\n-->\r\n:AppetiteDescriptionwithNegation.Appetite = {rule = \"AppetiteDescriptionwithNegation8\", AppetiteType = \"good\" ApplyNegation = \"no\"}\r\n```\r\n \r\n\r\n\r\n***********************************\r\n# TESTING THE GAZATEER and JAPE CODE\r\n\r\nWe need to some Gold Standard data to test the above Gazateers and Code. \r\n\r\n### Gold Standard data \r\n\r\n500 documents extracted from CRIS. Each document contains the word \"appetite\"\r\n\r\nThese documents were annotated by two individuals to code good or bad appeite accoding to the [GOLD STANDARD RULES](https://cloud.githubusercontent.com/assets/10629155/12238166/95b70598-b87a-11e5-9fe6-dcefe1bd904b.png). \r\n\r\nEnsure that inter-rater reliability is above 85% at least to minimise erroneous performance testing. \r\n\r\n\r\n###Performance Testing\r\n\r\nTesting on Gold Standard data\r\n\r\n######Precision: \r\n\r\n######Recall:\r\n\r\n\r\nComparison to Machine Learning Process using GATE machine learning:\r\n\r\n\r\n######Precision: \r\n\r\n######Recall:\r\n\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}